name: Build and Release
on:
  push:
    branches:
      - master
    tags-ignore:
      - '*'

jobs:
  prepare:
    runs-on: ubuntu-22.04
    outputs:
      RELEASE_VERSION: ${{ steps.get_release_version.outputs.RELEASE_VERSION }}
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Obter versão de release
        id: get_release_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Versão detectada: $VERSION"

  build-and-release:
    needs: prepare
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout do repositório
      uses: actions/checkout@v4
        
    - name: Preparar Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Autenticação no Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Compilar a imagem multiplataforma e publicar no Docker Hub
      id: build_image
      run: |
        docker buildx build \
          --platform linux/arm64,linux/amd64 \
          --tag debelzak/coala-bot:${{ needs.Prepare.outputs.RELEASE_VERSION }} \
          --tag debelzak/coala-bot:latest \
          --push \
          .
  
    - name: Publicar release no GitHub
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ needs.prepare.outputs.RELEASE_VERSION }}
        name: Release v${{ needs.prepare.outputs.RELEASE_VERSION }}
        body: |
          - Versão: v${{ needs.prepare.outputs.RELEASE_VERSION }}
          - Imagem Docker: `debelzak/coala-bot:${{ needs.prepare.outputs.RELEASE_VERSION }}`
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}