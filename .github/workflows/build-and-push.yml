name: Build e Push para Docker Hub
on: [push, pull_request]

jobs:
  Prepare:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_VERSION: ${{ steps.get_release_version.outputs.RELEASE_VERSION }}
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Obter versão da release atual
        id: get_release_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Versão detectada: $VERSION"

  Arm64-Build:
    needs: Prepare
    runs-on: ubuntu-latest
    env:
      ARTIFACT_FILE: coala-bot-${{ needs.Prepare.outputs.RELEASE_VERSION }}-docker-image-arm64.tar.gz
    steps:
    - name: Checkout do repositório
      uses: actions/checkout@v4

    - name: Preparar Buildx do Docker
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container

    - name: Compilar imagem Docker (Arm64)
      id: build_image_arm64
      run: |
        docker buildx build \
          --platform linux/arm64 \
          --tag debelzak/coala-bot:${{ needs.Prepare.outputs.RELEASE_VERSION }} \
          --tag debelzak/coala-bot:latest \
          --output type=docker,compression=estargz,dest=${{ env.ARTIFACT_FILE }} \
          .

    - name: Upload de artefato
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.ARTIFACT_FILE }}
        path: |
          ${{ env.ARTIFACT_FILE }}

  Amd64-Build:
    needs: Prepare
    runs-on: ubuntu-latest
    env:
      ARTIFACT_FILE: coala-bot-${{ needs.Prepare.outputs.RELEASE_VERSION }}-docker-image-amd64.tar.gz
    steps:
    - name: Checkout do repositório
      uses: actions/checkout@v4

    - name: Preparar Buildx do Docker
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container

    - name: Compilar imagem Docker (Amd64)
      id: build_image_amd64
      run: |
        docker buildx build \
          --platform linux/amd64 \
          --tag debelzak/coala-bot:${{ needs.Prepare.outputs.RELEASE_VERSION }} \
          --tag debelzak/coala-bot:latest \
          --output type=docker,compression=estargz,dest=${{ env.ARTIFACT_FILE }} \
          .

    - name: Upload de artefato
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.ARTIFACT_FILE }}
        path: |
          ${{ env.ARTIFACT_FILE }}

  Push-Docker-Hub:
    needs: Prepare
    runs-on: ubuntu-latest
    steps:
    - name: Checkout do repositório
      uses: actions/checkout@v4

    - name: Preparar Buildx do Docker
      uses: docker/setup-buildx-action@v3

    - name: Autenticação no Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Compilar e subir a imagem Docker Multiplataforma
      id: build_image
      run: |
        docker buildx build \
          --platform linux/arm64,linux/amd64 \
          --tag debelzak/coala-bot:${{ needs.Prepare.outputs.RELEASE_VERSION }} \
          --tag debelzak/coala-bot:latest \
          --push \
          .